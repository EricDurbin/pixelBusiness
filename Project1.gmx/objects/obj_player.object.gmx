<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set fixed Rotation
phy_fixed_rotation = true;

spd = 6;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
///Movement
mvLeft = keyboard_check(ord('A'));
mvRight = keyboard_check(ord('D'));
mvUp = keyboard_check(ord('W'));
mvDown = keyboard_check(ord('S'));

//friction = 2;

sprite_index = spr_player;
if(!mvUp &amp;&amp; !mvDown &amp;&amp; !mvLeft &amp;&amp; !mvRight){sprite_index = spr_playerstill;}
if(mvUp){
//    vspeed -= spd;

    phy_position_y -=spd;
    image_speed = 2;

}

if(mvDown){
//    vspeed += spd;

    phy_position_y += spd; 
    image_speed = 2;

}

if(mvLeft){ 
//    hspeed -= spd; 

    image_xscale = -1;
    phy_position_x -= spd;
    image_speed = 2;

}

if(mvRight){ 
//    hspeed += spd; 

    image_xscale = 1; 
    phy_position_x += spd;
    image_speed = 2;
}

/*

if(hspeed &gt; 6){ hspeed = 6; }
if(hspeed &lt; -6){hspeed = -6;}
if(vspeed &gt; 6){ vspeed = 6; }
if(vspeed &lt; -6){vspeed = -6;}

if(phy_speed_x &gt; 6){ phy_speed_x = 6; }
if(phy_speed_x &lt; -6){phy_speed_x = -6;}
if(phy_speed_y &gt; 6){ phy_speed_y = 6; }
if(phy_speed_y &lt; -6){phy_speed_y = -6;}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_portal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go through portal
    room_goto(other.new_room);
    x = other.new_x;
    y = other.new_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,8</point>
    <point>48,8</point>
    <point>48,96</point>
    <point>16,96</point>
  </PhysicsShapePoints>
</object>
